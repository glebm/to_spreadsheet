to_spreadsheet is a gem that lets you render xls from your existing haml/erb views from Rails (>= 3.0). !https://secure.travis-ci.org/glebm/to_spreadsheet.png?branch=master(Build Status)!:http://travis-ci.org/glebm/to_spreadsheet

h2. Installation

Add it to your Gemfile:

bc. gem 'to_spreadsheet'

h2. Usage

In your controller:

bc. # my_thingies_controller.rb
class MyThingiesController < ApplicationController
  respond_to :xls, :html
  def index
    @my_thingies = MyThingie.all
    respond_with(@my_thingies)
  end
end

In your view partial:

bc. # _my_thingie.haml
%table
  %caption My thingies
  %thead
    %tr
      %td ID
      %td Name
  %tbody
    - my_thingies.each do |thingie|
      %tr
        %td.number= thingie.id
        %td= thingie.name
  %tfoot
    %tr
      %td(colspan="2") #{my_thingies.length}

In your index.xls.haml:

bc. # index.xls.haml
= render 'my_thingies', :my_thingies => @my_thingies

In your index.html.haml:

bc. # index.html.haml
= link_to 'Download XLS', my_thingies_url(:format => :xls)
= render 'my_thingies', :my_thingies => @my_thingies

h3. Formatting

You can use class names on td/th for typed values. Here is the list of class to type mapping:

|_. ==CSS== class  |_. Format |
| decimal or float | Decimal  |
| num or int       | Integer  |
| datetime         | DateTime |
| date             | Date     |
| time             | Time     |

h3. Default null values

Add a `data-null="default value"` attribute to a cell to use the value as a default if the model value is nil.

h3. Worksheets

Every table in the view will be converted to a separate sheet.
The sheet title will be assigned to the value of the table's <caption> element if it exists.
